{"version":3,"sources":["webpack://Navigo.amd/./src/index.ts","webpack://Navigo.amd/webpack/bootstrap","webpack://Navigo.amd/webpack/startup","webpack://Navigo.amd/webpack/runtime/define property getters","webpack://Navigo.amd/webpack/runtime/hasOwnProperty shorthand"],"names":["PARAMETER_REGEXP","WILDCARD_REGEXP","clean","s","replace","regExpResultToParams","match","names","length","slice","reduce","params","value","index","decodeURIComponent","extractGETParameters","url","tmp","split","join","parseQuery","queryString","query","pairs","i","pair","key","Array","isArray","push","matchRoute","currentPath","route","current","GETParams","paramNames","pattern","path","full","dots","name","regexp","RegExp","data","Navigo","r","notFoundRoute","genericHooks","root","routes","destroyed","isPushStateAvailable","window","history","pushState","isWindowAvailable","hooksAndCallHandler","callHandler","hooks","leave","handler","updatePageLinks","after","before","shouldResolve","resolve","currentLocationPath","location","pathname","search","hash","already","console","warn","navigate","to","options","historyAPIMethod","stateObj","title","href","call","document","querySelectorAll","forEach","link","hasListenerAttached","addEventListener","e","ctrlKey","metaKey","target","tagName","toLowerCase","getAttribute","preventDefault","this","on","Object","keys","p","off","what","filter","destroy","removeEventListener","__popstateListener","notFound","_matchRoute","_clean","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"mappings":"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","file":"Navigo.amd.min.js","sourcesContent":["const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nconst WILDCARD_REGEXP = /\\*/g;\nconst REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nconst REPLACE_WILDCARD = \"(?:.*)\";\nconst FOLLOWED_BY_SLASH_REGEXP = \"(?:/$|$)\";\nconst MATCH_REGEXP_FLAGS = \"\";\n\nfunction clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nfunction regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nfunction extractGETParameters(url: string) {\n  const tmp = url.split(/\\?(.*)?$/);\n  return [tmp[0], tmp.slice(1).join(\"\")];\n}\nfunction parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nfunction matchRoute(currentPath: string, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(clean(currentPath));\n  const params = GETParams === \"\" ? null : parseQuery(GETParams);\n  const paramNames = [];\n  const pattern =\n    clean(route.path)\n      .replace(PARAMETER_REGEXP, function (full, dots, name) {\n        paramNames.push(name);\n        return REPLACE_VARIABLE_REGEXP;\n      })\n      .replace(WILDCARD_REGEXP, REPLACE_WILDCARD) + FOLLOWED_BY_SLASH_REGEXP;\n  const regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  const match = current.match(regexp);\n  if (clean(route.path) === \"\") {\n    if (clean(current) === \"\") {\n      return {\n        url: current,\n        queryString: GETParams,\n        route: route,\n        data: null,\n        params,\n      };\n    }\n  } else if (match) {\n    return {\n      url: current,\n      queryString: GETParams,\n      route: route,\n      data: regExpResultToParams(match, paramNames),\n      params,\n    };\n  }\n  return false;\n}\nfunction pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\n\nexport default function Navigo(r?: string) {\n  let root: string = \"/\";\n  let current: Match = null;\n  let routes: Route[] = [];\n  let notFoundRoute: Route;\n  let destroyed = false;\n  let genericHooks: RouteHooks;\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = typeof window !== \"undefined\";\n\n  if (!r) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(r);\n  }\n\n  function getCurrentEnvURL(): string {\n    if (isWindowAvailable) {\n      return location.pathname + location.search + location.hash;\n    }\n    return root;\n  }\n  function on(\n    path: string | Function | Object,\n    handler?: Function,\n    hooks?: RouteHooks\n  ) {\n    if (typeof path === \"object\") {\n      Object.keys(path).forEach((p) => this.on(p, path[p]));\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler as RouteHooks;\n      handler = path as Function;\n      path = root;\n    }\n    routes.push({\n      path: clean(path as string),\n      handler,\n      hooks: hooks || genericHooks,\n    });\n    return this;\n  }\n  function hooksAndCallHandler(route: Route, match: Match) {\n    const callHandler = () => {\n      if (current && current.route.hooks && current.route.hooks.leave) {\n        current.route.hooks.leave(match);\n      }\n      current = match;\n      route.handler(match);\n      updatePageLinks();\n      if (route.hooks && route.hooks.after) {\n        route.hooks.after(match);\n      }\n    };\n    if (route.hooks && route.hooks.before) {\n      route.hooks.before((shouldResolve: boolean) => {\n        if (typeof shouldResolve === \"undefined\" || shouldResolve === true) {\n          callHandler();\n        }\n      }, match);\n    } else {\n      callHandler();\n    }\n  }\n  function resolve(currentLocationPath?: string): boolean | Match {\n    if (typeof currentLocationPath === \"undefined\") {\n      currentLocationPath = getCurrentEnvURL();\n    }\n    for (let i = 0; i < routes.length; i++) {\n      const route = routes[i];\n      const match: false | Match = matchRoute(currentLocationPath, route);\n      if (match) {\n        if (\n          current &&\n          current.route === route &&\n          current.url === match.url &&\n          current.queryString === match.queryString\n        ) {\n          if (current.route.hooks && current.route.hooks.already) {\n            current.route.hooks.already(match);\n          }\n          return false;\n        }\n        hooksAndCallHandler(route, match);\n        return match;\n      }\n    }\n    if (notFoundRoute) {\n      const [url, queryString] = extractGETParameters(currentLocationPath);\n      notFoundRoute.path = clean(url);\n      hooksAndCallHandler(notFoundRoute, {\n        url: notFoundRoute.path,\n        queryString,\n        data: null,\n        route: notFoundRoute,\n        params: queryString !== \"\" ? parseQuery(queryString) : null,\n      });\n      return true;\n    }\n    console.warn(\n      `Navigo: \"${currentLocationPath}\" didn't match any of the registered routes.`\n    );\n    return false;\n  }\n  function off(what: string | Function) {\n    if (typeof what === \"string\") {\n      this.routes = routes = routes.filter((r) => r.path !== what);\n    } else {\n      this.routes = routes = routes.filter((r) => r.handler !== what);\n    }\n    return this;\n  }\n  function navigate(to: string, options: NavigateTo = {}): void {\n    to = `${clean(root)}/${clean(to)}`;\n    if (isPushStateAvailable) {\n      history[options.historyAPIMethod || \"pushState\"](\n        options.stateObj || {},\n        options.title || \"\",\n        to\n      );\n    } else if (isWindowAvailable) {\n      window.location.href = to;\n    }\n    resolve();\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        resolve();\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler, hooks?: RouteHooks) {\n    notFoundRoute = { path: \"/\", handler, hooks: hooks || genericHooks };\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (!link.hasListenerAttached) {\n        link.addEventListener(\"click\", function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          const location = link.getAttribute(\"href\");\n\n          if (!destroyed) {\n            e.preventDefault();\n            navigate(clean(location));\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n    return this;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n  function link(path: string) {\n    return `/${root}/${clean(path)}`;\n  }\n  function setGenericHooks(hooks: RouteHooks) {\n    genericHooks = hooks;\n    return this;\n  }\n\n  this.destroyed = destroyed;\n  this.routes = routes;\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n  this._matchRoute = matchRoute;\n  this._clean = clean;\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(809);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}