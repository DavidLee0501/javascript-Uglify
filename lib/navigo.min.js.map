{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/./src/index.ts","webpack://Navigo/./node_modules/path-to-regexp/dist.es2015/index.js","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand","webpack://Navigo/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","this","require","Navigo","r","routes","console","warn","on","path","handler","Object","keys","forEach","p","push","resolve","currentLocationPath","s","window","location","href","RegExp","replace","pathToRegexp","match","parse","compile","str","options","tokens","i","length","char","type","index","value","count","pattern","j","TypeError","name","code","charCodeAt","lexer","_a","prefixes","defaultPattern","escapeString","delimiter","result","key","tryConsume","mustConsume","undefined","nextType","consumeText","prefix","indexOf","suffix","modifier","name_1","pattern_1","tokensToFunction","reFlags","flags","encode","x","_b","validate","matches","map","token","data","optional","repeat","Array","isArray","segment","test","typeOfMessage","String","regexpToFunction","re","decode","pathname","m","exec","params","create","_loop_1","split","sensitive","tokensToRegexp","strict","start","_c","end","_d","endsWith","route","_i","tokens_1","mod","endToken","isEndDelimited","groupsRegex","execResult","source","regexpToRegexp","paths","parts","join","arrayToRegexp","stringToRegexp","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag"],"mappings":"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","file":"Navigo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","const { pathToRegexp, match, parse, compile } = require(\"path-to-regexp\");\n\ntype Route = {\n  path: String;\n  handler: Function;\n};\n\nfunction clean(s) {\n  if (s instanceof RegExp) return s;\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"^/\");\n}\n\nexport default function Navigo(r) {\n  let root: string = \"/\";\n  const routes: Route[] = [];\n\n  if (!r) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = r;\n  }\n\n  function on(path: string | Function | Object, handler?: Function) {\n    if (typeof path === \"object\") {\n      Object.keys(path).forEach((p) => this.on(p, path[p]));\n      return this;\n    } else if (typeof handler === \"undefined\") {\n      handler = path as Function;\n      path = root;\n    }\n    routes.push({ path: path as String, handler });\n    return this;\n  }\n  function resolve(currentLocationPath?: string) {\n    if (\n      typeof currentLocationPath !== \"undefined\" &&\n      typeof window !== \"undefined\"\n    ) {\n      currentLocationPath = clean(window.location.href);\n    }\n  }\n\n  this.routes = routes;\n  this.on = on;\n  this.resolve = resolve;\n}\n","/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \" + i);\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \" + j);\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \" + i);\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \" + i);\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        // tslint:disable-next-line\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            // tslint:disable-next-line\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\"\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;\n    var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n    var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n                    }\n                    else {\n                        route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n                    }\n                }\n                else {\n                    route += \"(\" + token.pattern + \")\" + token.modifier;\n                }\n            }\n            else {\n                route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += delimiter + \"?\";\n        route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n            : // tslint:disable-next-line\n                endToken === undefined;\n        if (!strict) {\n            route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(809);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}