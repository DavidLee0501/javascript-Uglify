{"version":3,"sources":["webpack://Navigo/webpack/universalModuleDefinition","webpack://Navigo/./src/index.ts","webpack://Navigo/webpack/bootstrap","webpack://Navigo/webpack/startup","webpack://Navigo/webpack/runtime/define property getters","webpack://Navigo/webpack/runtime/hasOwnProperty shorthand"],"names":["root","factory","exports","module","define","amd","self","this","PARAMETER_REGEXP","WILDCARD_REGEXP","clean","s","replace","regExpResultToParams","match","names","length","slice","reduce","params","value","index","decodeURIComponent","extractGETParameters","url","tmp","split","join","parseQuery","queryString","query","pairs","i","pair","key","Array","isArray","push","matchRoute","currentPath","route","current","GETParams","paramNames","regexp","RegExp","path","full","dots","name","data","Navigo","r","notFoundHandler","routes","destroyed","isPushStateAvailable","window","history","pushState","isWindowAvailable","resolve","currentLocationPath","location","pathname","search","hash","handler","updatePageLinks","console","warn","navigate","to","options","historyAPIMethod","stateObj","title","href","call","document","querySelectorAll","forEach","link","hasListenerAttached","addEventListener","e","ctrlKey","metaKey","target","tagName","toLowerCase","getAttribute","preventDefault","on","Object","keys","p","off","what","filter","destroy","removeEventListener","__popstateListener","notFound","_matchRoute","_clean","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"mappings":"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","file":"Navigo.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Navigo\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Navigo\"] = factory();\n\telse\n\t\troot[\"Navigo\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","const PARAMETER_REGEXP = /([:*])(\\w+)/g;\nconst WILDCARD_REGEXP = /\\*/g;\nconst REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nconst REPLACE_WILDCARD = \"(?:.*)\";\nconst FOLLOWED_BY_SLASH_REGEXP = \"(?:/$|$)\";\nconst MATCH_REGEXP_FLAGS = \"\";\n\nfunction clean(s: string) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nfunction regExpResultToParams(match, names: string[]) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce((params, value, index) => {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nfunction extractGETParameters(url: string) {\n  const tmp = url.split(/\\?(.*)?$/);\n  return [tmp[0], tmp.slice(1).join(\"\")];\n}\nfunction parseQuery(queryString: string): Object {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    if (pair[0] !== \"\") {\n      let key = decodeURIComponent(pair[0]);\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n  return query;\n}\nfunction matchRoute(currentPath: string, route: Route): false | Match {\n  const [current, GETParams] = extractGETParameters(clean(currentPath));\n  const paramNames = [];\n  const regexp = new RegExp(\n    clean(route.path)\n      .replace(PARAMETER_REGEXP, function (full, dots, name) {\n        paramNames.push(name);\n        return REPLACE_VARIABLE_REGEXP;\n      })\n      .replace(WILDCARD_REGEXP, REPLACE_WILDCARD) + FOLLOWED_BY_SLASH_REGEXP,\n    MATCH_REGEXP_FLAGS\n  );\n  const match = current.match(regexp);\n  if (match) {\n    return {\n      url: current,\n      queryString: GETParams,\n      route: route,\n      data: regExpResultToParams(match, paramNames),\n      params: GETParams === \"\" ? null : parseQuery(GETParams),\n    };\n  }\n  return false;\n}\nfunction pushStateAvailable(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.history &&\n    window.history.pushState\n  );\n}\n\nexport default function Navigo(r?: string) {\n  let root: string = \"/\";\n  let current: Match = null;\n  let routes: Route[] = [];\n  let notFoundHandler: Function;\n  let destroyed = false;\n  const isPushStateAvailable = pushStateAvailable();\n  const isWindowAvailable = typeof window !== \"undefined\";\n\n  if (!r) {\n    console.warn(\n      'Navigo requires a root path in its constructor. If not provided will use \"/\" as default.'\n    );\n  } else {\n    root = clean(r);\n  }\n\n  function getCurrentEnvURL(): string {\n    if (isWindowAvailable) {\n      return location.pathname + location.search + location.hash;\n    }\n    return root;\n  }\n  function on(path: string | Function | Object, handler?: Function) {\n    if (typeof path === \"object\") {\n      Object.keys(path).forEach((p) => this.on(p, path[p]));\n      return this;\n    } else if (typeof handler === \"undefined\") {\n      handler = path as Function;\n      path = root;\n    }\n    routes.push({ path: clean(path as string), handler });\n    return this;\n  }\n  function resolve(currentLocationPath?: string): boolean | Match {\n    if (typeof currentLocationPath === \"undefined\") {\n      currentLocationPath = getCurrentEnvURL();\n    }\n    for (let i = 0; i < routes.length; i++) {\n      const match: false | Match = matchRoute(currentLocationPath, routes[i]);\n      if (match) {\n        if (\n          current &&\n          current.route === routes[i] &&\n          current.url === match.url &&\n          current.queryString === match.queryString\n        ) {\n          return false;\n        }\n        current = match;\n        routes[i].handler(match);\n        updatePageLinks();\n        return match;\n      }\n    }\n    if (notFoundHandler) {\n      const [url, queryString] = extractGETParameters(currentLocationPath);\n      notFoundHandler({\n        url,\n        queryString,\n        data: null,\n        route: null,\n        params: parseQuery(queryString),\n      });\n      updatePageLinks();\n      return true;\n    }\n    console.warn(\n      `Navigo: \"${currentLocationPath}\" didn't match any of the registered routes.`\n    );\n    return false;\n  }\n  function off(what: string | Function) {\n    if (typeof what === \"string\") {\n      this.routes = routes = routes.filter((r) => r.path !== what);\n    } else {\n      this.routes = routes = routes.filter((r) => r.handler !== what);\n    }\n    return this;\n  }\n  function navigate(to: string, options: NavigateTo = {}): void {\n    to = `${clean(root)}/${clean(to)}`;\n    if (isPushStateAvailable) {\n      history[options.historyAPIMethod || \"pushState\"](\n        options.stateObj || {},\n        options.title || \"\",\n        to\n      );\n    } else if (isWindowAvailable) {\n      window.location.href = to;\n    }\n    resolve();\n  }\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = () => {\n        resolve();\n      };\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n  function destroy() {\n    this.routes = routes = [];\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n    this.destroyed = destroyed = true;\n  }\n  function notFound(handler) {\n    notFoundHandler = handler;\n    return this;\n  }\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach((link) => {\n      if (!link.hasListenerAttached) {\n        link.addEventListener(\"click\", function (e) {\n          if (\n            (e.ctrlKey || e.metaKey) &&\n            e.target.tagName.toLowerCase() === \"a\"\n          ) {\n            return false;\n          }\n          const location = link.getAttribute(\"href\");\n\n          if (!destroyed) {\n            e.preventDefault();\n            navigate(clean(location));\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n    return this;\n  }\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(\"[data-navigo]\"));\n    }\n    return [];\n  }\n\n  this.destroyed = destroyed;\n  this.routes = routes;\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this._matchRoute = matchRoute;\n  this._clean = clean;\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(809);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}